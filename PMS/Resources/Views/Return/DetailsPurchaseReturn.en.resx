<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add New Purchase" xml:space="preserve">
    <value>Add New Purchase</value>
  </data>
  <data name="Add New Return" xml:space="preserve">
    <value>Add New Return</value>
  </data>
  <data name="AFN" xml:space="preserve">
    <value>AFN</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Balanced Amount" xml:space="preserve">
    <value>Balanced Amount</value>
  </data>
  <data name="Created At" xml:space="preserve">
    <value>Created At</value>
  </data>
  <data name="Currency" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Discount" xml:space="preserve">
    <value>Discount</value>
  </data>
  <data name="Do you want to delete the following record of purchase return?" xml:space="preserve">
    <value>Do you want to delete the following record of purchase return?</value>
  </data>
  <data name="Do you want to delete the following record of purchase?" xml:space="preserve">
    <value>Do you want to delete the following record of purchase?</value>
  </data>
  <data name="Due Amount" xml:space="preserve">
    <value>Due Amount</value>
  </data>
  <data name="Excahgen Amount" xml:space="preserve">
    <value>Excahgen Amount</value>
  </data>
  <data name="Excahgen Rate" xml:space="preserve">
    <value>Excahgen Rate</value>
  </data>
  <data name="General Info" xml:space="preserve">
    <value>General Info</value>
  </data>
  <data name="Invoice No" xml:space="preserve">
    <value>Invoice No</value>
  </data>
  <data name="Items" xml:space="preserve">
    <value>Items</value>
  </data>
  <data name="No item available in this purchase return!" xml:space="preserve">
    <value>No item available in this purchase return!</value>
  </data>
  <data name="No item available in this purchase!" xml:space="preserve">
    <value>No item available in this purchase!</value>
  </data>
  <data name="No, Cancel it" xml:space="preserve">
    <value>No, Cancel it</value>
  </data>
  <data name="Paid Amount" xml:space="preserve">
    <value>Paid Amount</value>
  </data>
  <data name="Payment Details" xml:space="preserve">
    <value>Payment Details</value>
  </data>
  <data name="Print" xml:space="preserve">
    <value>Print</value>
  </data>
  <data name="Product" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="Purchase Date" xml:space="preserve">
    <value>Purchase Date</value>
  </data>
  <data name="Purchase Details" xml:space="preserve">
    <value>Purchase Details</value>
  </data>
  <data name="Purchase ID" xml:space="preserve">
    <value>Purchase ID</value>
  </data>
  <data name="Purchase No" xml:space="preserve">
    <value>Purchase No</value>
  </data>
  <data name="Purchase Performed By" xml:space="preserve">
    <value>Purchase Performed By</value>
  </data>
  <data name="Purchase Return Details" xml:space="preserve">
    <value>Purchase Return Details</value>
  </data>
  <data name="Purchase Returns Administration" xml:space="preserve">
    <value>Purchase Returns Administration</value>
  </data>
  <data name="Purchase Returns List" xml:space="preserve">
    <value>Purchase Returns List</value>
  </data>
  <data name="Purchases" xml:space="preserve">
    <value>Purchases</value>
  </data>
  <data name="Purchases Administration" xml:space="preserve">
    <value>Purchases Administration</value>
  </data>
  <data name="Purchases List" xml:space="preserve">
    <value>Purchases List</value>
  </data>
  <data name="Qty" xml:space="preserve">
    <value>Qty</value>
  </data>
  <data name="Received Amount" xml:space="preserve">
    <value>Received Amount</value>
  </data>
  <data name="Rent" xml:space="preserve">
    <value>Rent</value>
  </data>
  <data name="Return Date" xml:space="preserve">
    <value>Return Date</value>
  </data>
  <data name="Return Details" xml:space="preserve">
    <value>Return Details</value>
  </data>
  <data name="Return Info" xml:space="preserve">
    <value>Return Info</value>
  </data>
  <data name="Return No" xml:space="preserve">
    <value>Return No</value>
  </data>
  <data name="Return Performed By" xml:space="preserve">
    <value>Return Performed By</value>
  </data>
  <data name="Returned Qty" xml:space="preserve">
    <value>Returned Qty</value>
  </data>
  <data name="Returns" xml:space="preserve">
    <value>Returns</value>
  </data>
  <data name="SNo" xml:space="preserve">
    <value>SNo</value>
  </data>
  <data name="Supplier Name" xml:space="preserve">
    <value>Supplier Name</value>
  </data>
  <data name="System Info" xml:space="preserve">
    <value>System Info</value>
  </data>
  <data name="Tax" xml:space="preserve">
    <value>Tax</value>
  </data>
  <data name="Total Amount" xml:space="preserve">
    <value>Total Amount</value>
  </data>
  <data name="Total Price" xml:space="preserve">
    <value>Total Price</value>
  </data>
  <data name="Total Purchase" xml:space="preserve">
    <value>Total Purchase</value>
  </data>
  <data name="Total Returns" xml:space="preserve">
    <value>Total Returns</value>
  </data>
  <data name="Unit" xml:space="preserve">
    <value>Unit</value>
  </data>
  <data name="Unit Price" xml:space="preserve">
    <value>Unit Price</value>
  </data>
  <data name="Update At" xml:space="preserve">
    <value>Update At</value>
  </data>
  <data name="USD" xml:space="preserve">
    <value>USD</value>
  </data>
  <data name="Yes, Delete it" xml:space="preserve">
    <value>Yes, Delete it</value>
  </data>
</root>
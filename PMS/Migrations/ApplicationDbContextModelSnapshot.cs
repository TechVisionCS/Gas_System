// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PMS.Data;

namespace PMS.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("PMS.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("PMS.Models.Bank", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Signature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_bank_tbl");
                });

            modelBuilder.Entity("PMS.Models.BankTransaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<long>("BankId")
                        .HasColumnType("bigint");

                    b.Property<string>("BankTransactionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_bank_transaction_tbl");
                });

            modelBuilder.Entity("PMS.Models.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PreviousBalance")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_customer_tbl");
                });

            modelBuilder.Entity("PMS.Models.CustomerAdvanced", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<long>("BankId")
                        .HasColumnType("bigint");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desciption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<string>("TransCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_customer_advanced_tbl");
                });

            modelBuilder.Entity("PMS.Models.CustomerReceive", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<long>("BankId")
                        .HasColumnType("bigint");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desciption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<string>("TransCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_customer_receive_tbl");
                });

            modelBuilder.Entity("PMS.Models.Employee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BaseSalary")
                        .HasColumnType("decimal (38,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("DesignationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fathername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hiredate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Leavedate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalIdnumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NationalIdnumber")
                        .IsUnique()
                        .HasFilter("[NationalIdnumber] IS NOT NULL");

                    b.ToTable("gms_employee_tbl");
                });

            modelBuilder.Entity("PMS.Models.EmployeeSalary", b =>
                {
                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<int>("SalaryYear")
                        .HasColumnType("int");

                    b.Property<int>("SalaryMonth")
                        .HasColumnType("int");

                    b.Property<decimal>("Balanced")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("Bounce")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("NetSalary")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("OverTime")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("Paid")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<int>("TotalWorkDays")
                        .HasColumnType("int");

                    b.Property<string>("TransCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isPaid")
                        .HasColumnType("bit");

                    b.HasKey("EmployeeId", "SalaryYear", "SalaryMonth");

                    b.ToTable("gms_employee_salaries_tbl");
                });

            modelBuilder.Entity("PMS.Models.Expense", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<long>("BankId")
                        .HasColumnType("bigint");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<long>("ExpenseCategory")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ExpenseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<string>("TransCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_expense_tbl");
                });

            modelBuilder.Entity("PMS.Models.Finance.BankLedger", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<long>("BankTransactionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Debit")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("EntityId")
                        .HasColumnType("bigint");

                    b.Property<int>("EntityType")
                        .HasColumnType("int");

                    b.Property<string>("TransCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoucherNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isClosed")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("gms_bank_ledger_tbl");
                });

            modelBuilder.Entity("PMS.Models.Finance.CashLedger", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Debit")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("EntityId")
                        .HasColumnType("bigint");

                    b.Property<int>("EntityType")
                        .HasColumnType("int");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<string>("TransCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoucherNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("currencyEnum")
                        .HasColumnType("int");

                    b.Property<bool>("isClosed")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("gms_cash_ledger_tbl");
                });

            modelBuilder.Entity("PMS.Models.Finance.CustomerLedger", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Debit")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("EntityId")
                        .HasColumnType("bigint");

                    b.Property<string>("TransCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoucherNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isClosed")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("gms_customer_ledger_tbl");
                });

            modelBuilder.Entity("PMS.Models.Finance.EmployeeLedger", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Debit")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("EntityId")
                        .HasColumnType("bigint");

                    b.Property<string>("TransCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoucherNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isClosed")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("gms_employee_ledger_tbl");
                });

            modelBuilder.Entity("PMS.Models.Finance.OfficeLoanLedger", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Debit")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("EntityId")
                        .HasColumnType("bigint");

                    b.Property<string>("TransCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoucherNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isClosed")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("gms_office_loan_ledger_tbl");
                });

            modelBuilder.Entity("PMS.Models.Finance.PartnerLedger", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Debit")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("EntityId")
                        .HasColumnType("bigint");

                    b.Property<string>("TransCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoucherNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isClosed")
                        .HasColumnType("bit");

                    b.Property<long?>("partnerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("partnerId");

                    b.ToTable("gms_partner_ledger_tbl");
                });

            modelBuilder.Entity("PMS.Models.Finance.PersonalLoanLedger", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Debit")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("EntityId")
                        .HasColumnType("bigint");

                    b.Property<string>("TransCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoucherNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isClosed")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("gms_person_loan_ledger_tbl");
                });

            modelBuilder.Entity("PMS.Models.Finance.SarafLedger", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Debit")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("EntityId")
                        .HasColumnType("bigint");

                    b.Property<int>("EntityType")
                        .HasColumnType("int");

                    b.Property<long>("SarafTransactionId")
                        .HasColumnType("bigint");

                    b.Property<string>("TransCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoucherNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isClosed")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("gms_saraf_leger_tbl");
                });

            modelBuilder.Entity("PMS.Models.Finance.SupplierLedger", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Debit")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("EntityId")
                        .HasColumnType("bigint");

                    b.Property<string>("TransCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoucherNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isClosed")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("gms_supplier_ledger_tbl");
                });

            modelBuilder.Entity("PMS.Models.Finance.Transaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Operation")
                        .HasColumnType("int");

                    b.Property<string>("TransCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TransDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isClosed")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("gms_transaction_tbl");
                });

            modelBuilder.Entity("PMS.Models.FixedAsset.Asset", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AssetCategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InQty")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("OutQty")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StockQty")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("gms_asset_tbl");
                });

            modelBuilder.Entity("PMS.Models.FixedAsset.AssetHandover", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("HandoverDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HandoverRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HandoverRequestId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_asset_handover_tbl");
                });

            modelBuilder.Entity("PMS.Models.FixedAsset.AssetHandoverDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AssetHandoverId")
                        .HasColumnType("bigint");

                    b.Property<long>("AssetId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_asset_handover_Details_tbl");
                });

            modelBuilder.Entity("PMS.Models.FixedAsset.AssetReturn", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_asset_return");
                });

            modelBuilder.Entity("PMS.Models.FixedAsset.AssetStock", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AssetId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InQty")
                        .HasColumnType("int");

                    b.Property<int>("OutQty")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PurchaseDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StockQty")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_asset_stock_tbl");
                });

            modelBuilder.Entity("PMS.Models.Lookup.AssetsCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("gms_assets_category_tbl");
                });

            modelBuilder.Entity("PMS.Models.Lookup.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("gms_category_tbl");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "Natural gas is colorless and odorless, and explosive, so a sulfur-smell (similar to rotten eggs) is usually added for early detection of leaks",
                            Name = "Natural Gas",
                            Status = 1,
                            UserName = "System Defined"
                        });
                });

            modelBuilder.Entity("PMS.Models.Lookup.Country", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("gms_country_tbl");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Code = "AFN",
                            Name = "Afghanistan",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 2L,
                            Code = "PK",
                            Name = "Pakistan",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 3L,
                            Code = "IND",
                            Name = "India",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 4L,
                            Code = "TUR",
                            Name = "Turkey",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 5L,
                            Code = "IR",
                            Name = "Iran",
                            UserName = "System_Populated"
                        });
                });

            modelBuilder.Entity("PMS.Models.Lookup.Currency", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencySymbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyCode")
                        .IsUnique();

                    b.ToTable("gas_currencies_tbl");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CurrencyCode = "AFN",
                            CurrencyName = "Afghani",
                            CurrencySymbol = "؋",
                            UserName = "System_generated"
                        },
                        new
                        {
                            Id = 2L,
                            CurrencyCode = "USD",
                            CurrencyName = "UnitedState Dollar",
                            CurrencySymbol = "$",
                            UserName = "System_generated"
                        });
                });

            modelBuilder.Entity("PMS.Models.Lookup.Designation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_designation_tbl");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Admin",
                            Status = 1,
                            UserName = "System Defined"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Cashir",
                            Status = 1,
                            UserName = "System Defined"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Feul Attendant",
                            Status = 1,
                            UserName = "System Defined"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Mechanic",
                            Status = 1,
                            UserName = "System Defined"
                        },
                        new
                        {
                            Id = 5L,
                            Name = "Car Wash",
                            Status = 1,
                            UserName = "System Defined"
                        },
                        new
                        {
                            Id = 6L,
                            Name = "Gaurd",
                            Status = 1,
                            UserName = "System Defined"
                        });
                });

            modelBuilder.Entity("PMS.Models.Lookup.ExpensesCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("gms_expense_category_tbl");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "",
                            Name = "Rent",
                            Status = 1,
                            UserName = "System Defined"
                        },
                        new
                        {
                            Id = 2L,
                            Description = "",
                            Name = "Electricity",
                            Status = 1,
                            UserName = "System Defined"
                        },
                        new
                        {
                            Id = 3L,
                            Description = "",
                            Name = "Gas",
                            Status = 1,
                            UserName = "System Defined"
                        },
                        new
                        {
                            Id = 4L,
                            Description = "",
                            Name = "Water",
                            Status = 1,
                            UserName = "System Defined"
                        },
                        new
                        {
                            Id = 5L,
                            Description = "",
                            Name = "Air conditioning",
                            Status = 1,
                            UserName = "System Defined"
                        },
                        new
                        {
                            Id = 6L,
                            Description = "",
                            Name = "Trash",
                            Status = 1,
                            UserName = "System Defined"
                        },
                        new
                        {
                            Id = 7L,
                            Description = "",
                            Name = "Cellphones",
                            Status = 1,
                            UserName = "System Defined"
                        },
                        new
                        {
                            Id = 8L,
                            Description = "",
                            Name = "Office supplies",
                            Status = 1,
                            UserName = "System Defined"
                        },
                        new
                        {
                            Id = 9L,
                            Description = "",
                            Name = "Advertising",
                            Status = 1,
                            UserName = "System Defined"
                        },
                        new
                        {
                            Id = 10L,
                            Description = "",
                            Name = "marketing",
                            Status = 1,
                            UserName = "System Defined"
                        },
                        new
                        {
                            Id = 11L,
                            Description = "",
                            Name = "Website",
                            Status = 1,
                            UserName = "System Defined"
                        },
                        new
                        {
                            Id = 12L,
                            Description = "",
                            Name = "Software",
                            Status = 1,
                            UserName = "System Defined"
                        },
                        new
                        {
                            Id = 13L,
                            Description = "",
                            Name = "Entertainment",
                            Status = 1,
                            UserName = "System Defined"
                        },
                        new
                        {
                            Id = 14L,
                            Description = "",
                            Name = "Business meals",
                            Status = 1,
                            UserName = "System Defined"
                        },
                        new
                        {
                            Id = 15L,
                            Description = "",
                            Name = "travel expenses",
                            Status = 1,
                            UserName = "System Defined"
                        },
                        new
                        {
                            Id = 16L,
                            Description = "",
                            Name = "Vehicle expenses",
                            Status = 1,
                            UserName = "System Defined"
                        },
                        new
                        {
                            Id = 17L,
                            Description = "",
                            Name = "Insurance",
                            Status = 1,
                            UserName = "System Defined"
                        },
                        new
                        {
                            Id = 18L,
                            Description = "",
                            Name = "Health Insurance",
                            Status = 1,
                            UserName = "System Defined"
                        },
                        new
                        {
                            Id = 19L,
                            Description = "",
                            Name = "Meals",
                            Status = 1,
                            UserName = "System Defined"
                        },
                        new
                        {
                            Id = 20L,
                            Description = "",
                            Name = "Bank fees",
                            Status = 1,
                            UserName = "System Defined"
                        },
                        new
                        {
                            Id = 21L,
                            Description = "",
                            Name = "Maintenance",
                            Status = 1,
                            UserName = "System Defined"
                        },
                        new
                        {
                            Id = 22L,
                            Description = "",
                            Name = "repairs",
                            Status = 1,
                            UserName = "System Defined"
                        },
                        new
                        {
                            Id = 23L,
                            Description = "",
                            Name = "Printing",
                            Status = 1,
                            UserName = "System Defined"
                        });
                });

            modelBuilder.Entity("PMS.Models.Lookup.Manufacturer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_manufacturer_tbl");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "Irani",
                            Name = "Hayratan Gas.- IR ",
                            Status = 1,
                            UserName = "System_Populated"
                        });
                });

            modelBuilder.Entity("PMS.Models.Lookup.ProductType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TypeName")
                        .IsUnique();

                    b.ToTable("gms_product_type_tbl");
                });

            modelBuilder.Entity("PMS.Models.Lookup.Province", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("gms_province_tbl");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CountryCode = "AFN",
                            CountryId = 1L,
                            CountryName = "Afghanistan",
                            Name = "Badakhshan",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 2L,
                            CountryCode = "AFN",
                            CountryId = 1L,
                            CountryName = "Afghanistan",
                            Name = "Badghis",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 3L,
                            CountryCode = "AFN",
                            CountryId = 1L,
                            CountryName = "Afghanistan",
                            Name = "Baghlan",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 4L,
                            CountryCode = "AFN",
                            CountryId = 1L,
                            CountryName = "Afghanistan",
                            Name = "Balkh",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 5L,
                            CountryCode = "AFN",
                            CountryId = 1L,
                            CountryName = "Afghanistan",
                            Name = "Bamyan",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 6L,
                            CountryCode = "AFN",
                            CountryId = 1L,
                            CountryName = "Afghanistan",
                            Name = "Daykundi",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 7L,
                            CountryCode = "AFN",
                            CountryId = 1L,
                            CountryName = "Afghanistan",
                            Name = "Farah",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 8L,
                            CountryCode = "AFN",
                            CountryId = 1L,
                            CountryName = "Afghanistan",
                            Name = "Faryab",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 9L,
                            CountryCode = "AFN",
                            CountryId = 1L,
                            CountryName = "Afghanistan",
                            Name = "Ghazni",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 10L,
                            CountryCode = "AFN",
                            CountryId = 1L,
                            CountryName = "Afghanistan",
                            Name = "Ghor",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 11L,
                            CountryCode = "AFN",
                            CountryId = 1L,
                            CountryName = "Afghanistan",
                            Name = "Helmand",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 12L,
                            CountryCode = "AFN",
                            CountryId = 1L,
                            CountryName = "Afghanistan",
                            Name = "Herat",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 13L,
                            CountryCode = "AFN",
                            CountryId = 1L,
                            CountryName = "Afghanistan",
                            Name = "Jowzjan",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 14L,
                            CountryCode = "AFN",
                            CountryId = 1L,
                            CountryName = "Afghanistan",
                            Name = "Kabul",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 15L,
                            CountryCode = "AFN",
                            CountryId = 1L,
                            CountryName = "Afghanistan",
                            Name = "Kandahar",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 16L,
                            CountryCode = "AFN",
                            CountryId = 1L,
                            CountryName = "Afghanistan",
                            Name = "Kapisa",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 17L,
                            CountryCode = "AFN",
                            CountryId = 1L,
                            CountryName = "Afghanistan",
                            Name = "Khost",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 18L,
                            CountryCode = "AFN",
                            CountryId = 1L,
                            CountryName = "Afghanistan",
                            Name = "Kunar",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 19L,
                            CountryCode = "AFN",
                            CountryId = 1L,
                            CountryName = "Afghanistan",
                            Name = "Kunduz",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 20L,
                            CountryCode = "AFN",
                            CountryId = 1L,
                            CountryName = "Afghanistan",
                            Name = "Laghman",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 21L,
                            CountryCode = "AFN",
                            CountryId = 1L,
                            CountryName = "Afghanistan",
                            Name = "Logar",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 22L,
                            CountryCode = "AFN",
                            CountryId = 1L,
                            CountryName = "Afghanistan",
                            Name = "Nangarhar",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 23L,
                            CountryCode = "AFN",
                            CountryId = 1L,
                            CountryName = "Afghanistan",
                            Name = "Nimruz",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 24L,
                            CountryCode = "AFN",
                            CountryId = 1L,
                            CountryName = "Afghanistan",
                            Name = "Nuristan",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 25L,
                            CountryCode = "AFN",
                            CountryId = 1L,
                            CountryName = "Afghanistan",
                            Name = "Urozgan",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 26L,
                            CountryCode = "AFN",
                            CountryId = 1L,
                            CountryName = "Afghanistan",
                            Name = "Paktia",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 27L,
                            CountryCode = "AFN",
                            CountryId = 1L,
                            CountryName = "Afghanistan",
                            Name = "Paktika",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 28L,
                            CountryCode = "AFN",
                            CountryId = 1L,
                            CountryName = "Afghanistan",
                            Name = "Panjshir",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 29L,
                            CountryCode = "AFN",
                            CountryId = 1L,
                            CountryName = "Afghanistan",
                            Name = "Parwan",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 30L,
                            CountryCode = "AFN",
                            CountryId = 1L,
                            CountryName = "Afghanistan",
                            Name = "Samangan",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 31L,
                            CountryCode = "AFN",
                            CountryId = 1L,
                            CountryName = "Afghanistan",
                            Name = "Sar-e Pol",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 32L,
                            CountryCode = "AFN",
                            CountryId = 1L,
                            CountryName = "Afghanistan",
                            Name = "Takhar",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 33L,
                            CountryCode = "AFN",
                            CountryId = 1L,
                            CountryName = "Afghanistan",
                            Name = "Wardak",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 34L,
                            CountryCode = "AFN",
                            CountryId = 1L,
                            CountryName = "Afghanistan",
                            Name = "Zabul",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 35L,
                            CountryCode = "PK",
                            CountryId = 2L,
                            CountryName = "Pakistan",
                            Name = "Punjab",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 36L,
                            CountryCode = "PK",
                            CountryId = 2L,
                            CountryName = "Pakistan",
                            Name = "RawalPindi",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 37L,
                            CountryCode = "PK",
                            CountryId = 2L,
                            CountryName = "Pakistan",
                            Name = "Jehlum",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 38L,
                            CountryCode = "PK",
                            CountryId = 2L,
                            CountryName = "Pakistan",
                            Name = "Sohawa",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 39L,
                            CountryCode = "PK",
                            CountryId = 2L,
                            CountryName = "Pakistan",
                            Name = "Peshawar",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 40L,
                            CountryCode = "IND",
                            CountryId = 3L,
                            CountryName = "India",
                            Name = "Andhra Pradesh",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 41L,
                            CountryCode = "IND",
                            CountryId = 3L,
                            CountryName = "India",
                            Name = "Arunachal Pradesh",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 42L,
                            CountryCode = "IND",
                            CountryId = 3L,
                            CountryName = "India",
                            Name = "Assam",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 43L,
                            CountryCode = "IND",
                            CountryId = 3L,
                            CountryName = "India",
                            Name = "Bihar",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 44L,
                            CountryCode = "IND",
                            CountryId = 3L,
                            CountryName = "India",
                            Name = "Chhattisgarh",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 45L,
                            CountryCode = "IND",
                            CountryId = 3L,
                            CountryName = "India",
                            Name = "Goa",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 46L,
                            CountryCode = "IND",
                            CountryId = 3L,
                            CountryName = "India",
                            Name = "Gujarat",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 47L,
                            CountryCode = "IND",
                            CountryId = 3L,
                            CountryName = "India",
                            Name = "Haryana",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 48L,
                            CountryCode = "IND",
                            CountryId = 3L,
                            CountryName = "India",
                            Name = "Himachal Pradesh",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 49L,
                            CountryCode = "IND",
                            CountryId = 3L,
                            CountryName = "India",
                            Name = "Jharkhand",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 50L,
                            CountryCode = "IND",
                            CountryId = 3L,
                            CountryName = "India",
                            Name = "Karnataka",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 51L,
                            CountryCode = "IND",
                            CountryId = 3L,
                            CountryName = "India",
                            Name = "Kerala",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 52L,
                            CountryCode = "IND",
                            CountryId = 3L,
                            CountryName = "India",
                            Name = "Madhya Pradesh",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 53L,
                            CountryCode = "IND",
                            CountryId = 3L,
                            CountryName = "India",
                            Name = "Maharashtra",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 54L,
                            CountryCode = "IND",
                            CountryId = 3L,
                            CountryName = "India",
                            Name = "Manipur",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 55L,
                            CountryCode = "IND",
                            CountryId = 3L,
                            CountryName = "India",
                            Name = "Meghalaya",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 56L,
                            CountryCode = "IND",
                            CountryId = 3L,
                            CountryName = "India",
                            Name = "Mizoram",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 57L,
                            CountryCode = "IND",
                            CountryId = 3L,
                            CountryName = "India",
                            Name = "Nagaland",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 58L,
                            CountryCode = "IND",
                            CountryId = 3L,
                            CountryName = "India",
                            Name = "Odisha",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 59L,
                            CountryCode = "IND",
                            CountryId = 3L,
                            CountryName = "India",
                            Name = "Punjab",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 60L,
                            CountryCode = "IND",
                            CountryId = 3L,
                            CountryName = "India",
                            Name = "Rajasthan",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 61L,
                            CountryCode = "IND",
                            CountryId = 3L,
                            CountryName = "India",
                            Name = "Sikkim",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 62L,
                            CountryCode = "IND",
                            CountryId = 3L,
                            CountryName = "India",
                            Name = "Tamil Nadu",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 63L,
                            CountryCode = "IND",
                            CountryId = 3L,
                            CountryName = "India",
                            Name = "Telangana",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 64L,
                            CountryCode = "IND",
                            CountryId = 3L,
                            CountryName = "India",
                            Name = "Telangana",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 65L,
                            CountryCode = "IND",
                            CountryId = 3L,
                            CountryName = "India",
                            Name = "Tripura",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 66L,
                            CountryCode = "IND",
                            CountryId = 3L,
                            CountryName = "India",
                            Name = "Uttar Pradesh",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 67L,
                            CountryCode = "IND",
                            CountryId = 3L,
                            CountryName = "India",
                            Name = "Uttarakhand",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 68L,
                            CountryCode = "TUR",
                            CountryId = 4L,
                            CountryName = "Turkey",
                            Name = "Adana",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 69L,
                            CountryCode = "TUR",
                            CountryId = 4L,
                            CountryName = "Turkey",
                            Name = "Adıyaman",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 70L,
                            CountryCode = "TUR",
                            CountryId = 4L,
                            CountryName = "Turkey",
                            Name = "Afyonkarahisar",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 71L,
                            CountryCode = "TUR",
                            CountryId = 4L,
                            CountryName = "Turkey",
                            Name = "Ağri",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 72L,
                            CountryCode = "TUR",
                            CountryId = 4L,
                            CountryName = "Turkey",
                            Name = "Aksaray",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 73L,
                            CountryCode = "TUR",
                            CountryId = 4L,
                            CountryName = "Turkey",
                            Name = "Amasya",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 74L,
                            CountryCode = "TUR",
                            CountryId = 4L,
                            CountryName = "Turkey",
                            Name = "Ankara",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 75L,
                            CountryCode = "TUR",
                            CountryId = 4L,
                            CountryName = "Turkey",
                            Name = "Antalya",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 76L,
                            CountryCode = "TUR",
                            CountryId = 4L,
                            CountryName = "Turkey",
                            Name = "Ardahan",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 77L,
                            CountryCode = "TUR",
                            CountryId = 4L,
                            CountryName = "Turkey",
                            Name = "Artvin",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 78L,
                            CountryCode = "TUR",
                            CountryId = 4L,
                            CountryName = "Turkey",
                            Name = "Aydın",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 79L,
                            CountryCode = "TUR",
                            CountryId = 4L,
                            CountryName = "Turkey",
                            Name = "Balıkesir",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 80L,
                            CountryCode = "TUR",
                            CountryId = 4L,
                            CountryName = "Turkey",
                            Name = "Bartın",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 81L,
                            CountryCode = "TUR",
                            CountryId = 4L,
                            CountryName = "Turkey",
                            Name = "Batman",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 82L,
                            CountryCode = "TUR",
                            CountryId = 4L,
                            CountryName = "Turkey",
                            Name = "Bayburt",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 83L,
                            CountryCode = "TUR",
                            CountryId = 4L,
                            CountryName = "Turkey",
                            Name = "Bilecik",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 84L,
                            CountryCode = "TUR",
                            CountryId = 4L,
                            CountryName = "Turkey",
                            Name = "Bingöl",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 85L,
                            CountryCode = "TUR",
                            CountryId = 4L,
                            CountryName = "Turkey",
                            Name = "Bitlis",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 86L,
                            CountryCode = "TUR",
                            CountryId = 4L,
                            CountryName = "Turkey",
                            Name = "Bolu",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 87L,
                            CountryCode = "TUR",
                            CountryId = 4L,
                            CountryName = "Turkey",
                            Name = "Burdur",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 88L,
                            CountryCode = "TUR",
                            CountryId = 4L,
                            CountryName = "Turkey",
                            Name = "Bursa",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 90L,
                            CountryCode = "TUR",
                            CountryId = 4L,
                            CountryName = "Turkey",
                            Name = "Çanakkale",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 91L,
                            CountryCode = "TUR",
                            CountryId = 4L,
                            CountryName = "Turkey",
                            Name = "Çankırı",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 92L,
                            CountryCode = "TUR",
                            CountryId = 4L,
                            CountryName = "Turkey",
                            Name = "Çorum",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 93L,
                            CountryCode = "TUR",
                            CountryId = 4L,
                            CountryName = "Turkey",
                            Name = "Denizli",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 94L,
                            CountryCode = "TUR",
                            CountryId = 4L,
                            CountryName = "Turkey",
                            Name = "Diyarbakır",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 95L,
                            CountryCode = "TUR",
                            CountryId = 4L,
                            CountryName = "Turkey",
                            Name = "Düzce",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 96L,
                            CountryCode = "IR",
                            CountryId = 5L,
                            CountryName = "Iran",
                            Name = "Alborz",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 97L,
                            CountryCode = "IR",
                            CountryId = 5L,
                            CountryName = "Iran",
                            Name = "South Khorasan",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 98L,
                            CountryCode = "IR",
                            CountryId = 5L,
                            CountryName = "Iran",
                            Name = "Razavi Khorasan",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 99L,
                            CountryCode = "IR",
                            CountryId = 5L,
                            CountryName = "Iran",
                            Name = "North Khorasan",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 100L,
                            CountryCode = "IR",
                            CountryId = 5L,
                            CountryName = "Iran",
                            Name = "Golestan",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 101L,
                            CountryCode = "IR",
                            CountryId = 5L,
                            CountryName = "Iran",
                            Name = "Mazandaran",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 102L,
                            CountryCode = "IR",
                            CountryId = 5L,
                            CountryName = "Iran",
                            Name = "Semnan",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 103L,
                            CountryCode = "IR",
                            CountryId = 5L,
                            CountryName = "Iran",
                            Name = "Esfahan",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 104L,
                            CountryCode = "IR",
                            CountryId = 5L,
                            CountryName = "Iran",
                            Name = "Yazd",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 105L,
                            CountryCode = "IR",
                            CountryId = 5L,
                            CountryName = "Iran",
                            Name = "Kerman",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 106L,
                            CountryCode = "IR",
                            CountryId = 5L,
                            CountryName = "Iran",
                            Name = "Sistan-Baluchistan",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 107L,
                            CountryCode = "IR",
                            CountryId = 5L,
                            CountryName = "Iran",
                            Name = "Hormozgan",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 108L,
                            CountryCode = "IR",
                            CountryId = 5L,
                            CountryName = "Iran",
                            Name = "Fars",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 109L,
                            CountryCode = "IR",
                            CountryId = 5L,
                            CountryName = "Iran",
                            Name = "Bushehr",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 110L,
                            CountryCode = "IR",
                            CountryId = 5L,
                            CountryName = "Iran",
                            Name = "Buyer Ahmad",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 111L,
                            CountryCode = "IR",
                            CountryId = 5L,
                            CountryName = "Iran",
                            Name = "Kohkiluyeh",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 112L,
                            CountryCode = "IR",
                            CountryId = 5L,
                            CountryName = "Iran",
                            Name = "Bakhtiari",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 113L,
                            CountryCode = "IR",
                            CountryId = 5L,
                            CountryName = "Iran",
                            Name = "Chahar Mahaal",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 114L,
                            CountryCode = "IR",
                            CountryId = 5L,
                            CountryName = "Iran",
                            Name = "Khuzestan",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 115L,
                            CountryCode = "IR",
                            CountryId = 5L,
                            CountryName = "Iran",
                            Name = "Lorestan",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 116L,
                            CountryCode = "IR",
                            CountryId = 5L,
                            CountryName = "Iran",
                            Name = "Ilam",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 128L,
                            CountryCode = "IR",
                            CountryId = 5L,
                            CountryName = "Iran",
                            Name = "Kermanshah",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 117L,
                            CountryCode = "IR",
                            CountryId = 5L,
                            CountryName = "Iran",
                            Name = "Hamadan",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 118L,
                            CountryCode = "IR",
                            CountryId = 5L,
                            CountryName = "Iran",
                            Name = "Kurdistan",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 119L,
                            CountryCode = "IR",
                            CountryId = 5L,
                            CountryName = "Iran",
                            Name = "West Azarbaijan",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 120L,
                            CountryCode = "IR",
                            CountryId = 5L,
                            CountryName = "Iran",
                            Name = "East Azarbaijan",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 121L,
                            CountryCode = "IR",
                            CountryId = 5L,
                            CountryName = "Iran",
                            Name = "Zanjan",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 122L,
                            CountryCode = "IR",
                            CountryId = 5L,
                            CountryName = "Iran",
                            Name = "Ardabil",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 123L,
                            CountryCode = "IR",
                            CountryId = 5L,
                            CountryName = "Iran",
                            Name = "Gilan",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 124L,
                            CountryCode = "IR",
                            CountryId = 5L,
                            CountryName = "Iran",
                            Name = "Qazvin",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 125L,
                            CountryCode = "IR",
                            CountryId = 5L,
                            CountryName = "Iran",
                            Name = "Markazi",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 126L,
                            CountryCode = "IR",
                            CountryId = 5L,
                            CountryName = "Iran",
                            Name = "Qom",
                            UserName = "System_Populated"
                        },
                        new
                        {
                            Id = 127L,
                            CountryCode = "IR",
                            CountryId = 5L,
                            CountryName = "Iran",
                            Name = "Tehran",
                            UserName = "System_Populated"
                        });
                });

            modelBuilder.Entity("PMS.Models.Lookup.ServiceCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("gms_service_category_tbl");
                });

            modelBuilder.Entity("PMS.Models.Lookup.Unit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("KgAmount")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("gms_unit_tbl");
                });

            modelBuilder.Entity("PMS.Models.OfficeLoan.OfficeLoanPayment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<long>("BankId")
                        .HasColumnType("bigint");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desciption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<string>("PersonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_office_loan_payment_tbl");
                });

            modelBuilder.Entity("PMS.Models.OfficeLoan.OfficeLoanReceive", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<long>("BankId")
                        .HasColumnType("bigint");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desciption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<string>("PersonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_office_loan_receive_tbl");
                });

            modelBuilder.Entity("PMS.Models.OfficeLoan.OfficePerson", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PreviousBalance")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_office_person_tbl");
                });

            modelBuilder.Entity("PMS.Models.Partner", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Countryid")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PreviousBalance")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<long>("Provinceid")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_partner_tbl");
                });

            modelBuilder.Entity("PMS.Models.PartnerInvestment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<long>("BankId")
                        .HasColumnType("bigint");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desciption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InvestmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvestmetType")
                        .HasColumnType("int");

                    b.Property<long>("PartnerId")
                        .HasColumnType("bigint");

                    b.Property<string>("PartnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_partner_investment_tbl");
                });

            modelBuilder.Entity("PMS.Models.PartnerPayment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<long>("BankId")
                        .HasColumnType("bigint");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desciption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PartnerId")
                        .HasColumnType("bigint");

                    b.Property<string>("PartnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<string>("TransCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_partner_payment_tbl");
                });

            modelBuilder.Entity("PMS.Models.PersonalLoan.Person", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PreviousBalance")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_person_tbl");
                });

            modelBuilder.Entity("PMS.Models.PersonalLoan.PersonalLoanPayment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<long>("BankId")
                        .HasColumnType("bigint");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desciption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<string>("PersonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_person_loan_payment_tbl");
                });

            modelBuilder.Entity("PMS.Models.PersonalLoan.PersonalLoanReceive", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<long>("BankId")
                        .HasColumnType("bigint");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desciption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<string>("PersonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_person_loan_receive_tbl");
                });

            modelBuilder.Entity("PMS.Models.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ManufacturerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProductTypeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("gms_product_tbl");
                });

            modelBuilder.Entity("PMS.Models.ProductBatch", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BatchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("PurchaseId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("StockQty")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_product_batch_tbl");
                });

            modelBuilder.Entity("PMS.Models.ProductSupplier", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<long>("SupplierId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_product_supplier_tbl");
                });

            modelBuilder.Entity("PMS.Models.ProductUnit", b =>
                {
                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<long>("UnitId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("UnitSellPrice")
                        .HasColumnType("decimal(38, 2)");

                    b.HasKey("ProductId", "UnitId");

                    b.HasIndex("UnitId");

                    b.ToTable("ProductUnits");
                });

            modelBuilder.Entity("PMS.Models.Purchase.PartnersPurchaseShare", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_partners_purchase_shares_tbl");
                });

            modelBuilder.Entity("PMS.Models.Purchase.Purchase", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BankId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("DueAmount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("ExchangeAmount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<string>("InvoiceNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PurchaseType")
                        .HasColumnType("int");

                    b.Property<decimal>("RentAmount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<long>("SupplierId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<string>("TransCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("currencyEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("gms_purchase_tbl");
                });

            modelBuilder.Entity("PMS.Models.Purchase.PurchaseDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<long>("PurchaseId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("Qty")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("TotalPurchasePrice")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<long>("UnitId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_purchase_details_tbl");
                });

            modelBuilder.Entity("PMS.Models.Quote.Quote", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BankId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("DueAmount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<DateTime>("QuoteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("QuoteStatus")
                        .HasColumnType("int");

                    b.Property<decimal>("RentAmount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_quote_tbl");
                });

            modelBuilder.Entity("PMS.Models.Quote.QuoteDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BatchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Qty")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<long>("QuoteId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("TotalQuotePrice")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_quote_details_tbl");
                });

            modelBuilder.Entity("PMS.Models.Return", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BankId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("DueAmount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<long>("PurchaseId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("RentAmount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReturnType")
                        .HasColumnType("int");

                    b.Property<long>("SaleId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<long>("SupplierId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<string>("TransCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_return_tbl");
                });

            modelBuilder.Entity("PMS.Models.ReturnDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("DetailsId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Qty")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<long>("ReturnId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("TotalReturnPrice")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<long>("UnitId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UnitId");

                    b.ToTable("gms_return_details_tbl");
                });

            modelBuilder.Entity("PMS.Models.Sale.Sale", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BankId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("DueAmount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("ExchangeAmount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<decimal>("RentAmount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SaleType")
                        .HasColumnType("int");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<string>("TransCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("currencyEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("gms_sale_tbl");
                });

            modelBuilder.Entity("PMS.Models.Sale.SaleDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Qty")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<long>("SaleId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("TotalSalePrice")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<long>("UnitId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UnitId");

                    b.ToTable("gms_sale_details_tbl");
                });

            modelBuilder.Entity("PMS.Models.Saraf", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SarafName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Signature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_saraf_tbl");
                });

            modelBuilder.Entity("PMS.Models.SarafTransaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SarafId")
                        .HasColumnType("bigint");

                    b.Property<string>("SarafTransactionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_saraf_transaction_tbl");
                });

            modelBuilder.Entity("PMS.Models.Service.ServiceDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("Fee_Charges")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("Qty")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<long>("ServiceCatergoryId")
                        .HasColumnType("bigint");

                    b.Property<long>("ServiceId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("TotalServicePrice")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_service_details_tbl");
                });

            modelBuilder.Entity("PMS.Models.Service.Services", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BankId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("DueAmount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ServiceDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_service_tbl");
                });

            modelBuilder.Entity("PMS.Models.Settings.ProductTax", b =>
                {
                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<long>("TaxId")
                        .HasColumnType("bigint");

                    b.HasKey("ProductId", "TaxId");

                    b.HasIndex("TaxId");

                    b.ToTable("gms_product_tax_tbl");
                });

            modelBuilder.Entity("PMS.Models.Settings.Tax", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_tax_tbl");
                });

            modelBuilder.Entity("PMS.Models.Shop", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address_dr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address_en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address_ps")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_dr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_en")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_ps")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsible1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsible2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slog_dr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slog_en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slog_ps")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_shop_tbl");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Address_dr = "شهر نو عقب مجید مال",
                            Address_en = "Share-now Majeed Mal back street",
                            Address_ps = "شهر نو مجید مال شاته کوڅه",
                            Email1 = "info@techvision.af",
                            Email2 = "amanzai@techvision.af",
                            Name_dr = "شزکت خدماتی تیک ویژن",
                            Name_en = "Techvision Consulting Service",
                            Name_ps = "تیک ویژن خدماتی شرکت",
                            Phone1 = "0770902698",
                            Phone2 = "079892332",
                            Responsible1 = "Bismillah Amanzi",
                            Responsible2 = "AKbr",
                            Slog_dr = "تجارت تان جهانی سازید",
                            Slog_en = "Make Your Bussiness Degital",
                            Slog_ps = "تجارت مو نړی وال کړی"
                        });
                });

            modelBuilder.Entity("PMS.Models.Stock", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<float>("InQty")
                        .HasColumnType("real");

                    b.Property<float>("OutQty")
                        .HasColumnType("real");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<float>("StockQty")
                        .HasColumnType("real");

                    b.Property<decimal>("TotalStockPurchasePrice")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("TotalStockSalePrice")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_stock_tbl");
                });

            modelBuilder.Entity("PMS.Models.StockDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("InQty")
                        .HasColumnType("real");

                    b.Property<float>("OutQty")
                        .HasColumnType("real");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<long>("SupplierId")
                        .HasColumnType("bigint");

                    b.Property<string>("TransCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_stock_details_tbl");
                });

            modelBuilder.Entity("PMS.Models.StockLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BatchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("InQty")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("OutQty")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("StockQty")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<long>("SupplierId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_stock_purchase_log_tbl");
                });

            modelBuilder.Entity("PMS.Models.Supplier", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PreviousBalance")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_supplier_tbl");
                });

            modelBuilder.Entity("PMS.Models.SupplierAdvanced", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<long>("BankId")
                        .HasColumnType("bigint");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desciption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<long>("SupplierId")
                        .HasColumnType("bigint");

                    b.Property<string>("SupplierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_supplier_advanced_tbl");
                });

            modelBuilder.Entity("PMS.Models.SupplierPayment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<long>("BankId")
                        .HasColumnType("bigint");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desciption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<long>("SupplierId")
                        .HasColumnType("bigint");

                    b.Property<string>("SupplierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("gms_supplier_payment_tbl");
                });

            modelBuilder.Entity("PMS.Models.Wastage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ExCharges")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<int>("Flg")
                        .HasColumnType("int");

                    b.Property<decimal>("IncomeFromWastage")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<string>("TransCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("WastageDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("gms_wastage_tbl");
                });

            modelBuilder.Entity("PMS.Models.WastageDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Qty")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<long>("UnitId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("WastageId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UnitId");

                    b.ToTable("gms_wastage_details_tbl");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("PMS.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("PMS.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PMS.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("PMS.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PMS.Models.EmployeeSalary", b =>
                {
                    b.HasOne("PMS.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PMS.Models.Finance.CustomerLedger", b =>
                {
                    b.HasOne("PMS.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("PMS.Models.Finance.PartnerLedger", b =>
                {
                    b.HasOne("PMS.Models.Partner", "partner")
                        .WithMany()
                        .HasForeignKey("partnerId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("PMS.Models.Lookup.Province", b =>
                {
                    b.HasOne("PMS.Models.Lookup.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PMS.Models.Product", b =>
                {
                    b.HasOne("PMS.Models.Lookup.ProductType", null)
                        .WithMany("products")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("PMS.Models.ProductUnit", b =>
                {
                    b.HasOne("PMS.Models.Product", "Product")
                        .WithMany("ProductsUnits")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PMS.Models.Lookup.Unit", "Unit")
                        .WithMany("ProductsUnits")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PMS.Models.ReturnDetails", b =>
                {
                    b.HasOne("PMS.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PMS.Models.Lookup.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PMS.Models.Sale.SaleDetails", b =>
                {
                    b.HasOne("PMS.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PMS.Models.Lookup.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PMS.Models.Settings.ProductTax", b =>
                {
                    b.HasOne("PMS.Models.Product", "product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PMS.Models.Settings.Tax", "Tax")
                        .WithMany("productTaxes")
                        .HasForeignKey("TaxId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PMS.Models.WastageDetails", b =>
                {
                    b.HasOne("PMS.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PMS.Models.Lookup.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
